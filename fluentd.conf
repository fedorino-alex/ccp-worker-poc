# Fluentd configuration for collecting Docker container logs

<source>
  @type tail
  path /var/lib/docker/containers/*/*.log
  pos_file /var/log/fluentd-containers.log.pos
  tag docker.*
  format json
  read_from_head true
  refresh_interval 1
</source>

# Parse Docker log format and extract the inner log message
<filter docker.**>
  @type parser
  key_name log
  reserve_data true
  remove_key_name_field false
  <parse>
    @type json
  </parse>
</filter>

# Extract container information from Docker metadata
<filter docker.**>
  @type record_transformer
  enable_ruby true
  <record>
    container_id ${tag_parts[1]}
    container_name ${record.dig("attrs", "tag") rescue "unknown"}
    source "docker-container"
    timestamp ${time}
    # Extract structured log fields if they exist
    log_level ${record.dig("Level") rescue record.dig("level") rescue "Info"}
    service_name ${record.dig("ServiceName") rescue record.dig("service_name") rescue "unknown"}
    trace_id ${record.dig("TraceId") rescue record.dig("trace_id") rescue nil}
    span_id ${record.dig("SpanId") rescue record.dig("span_id") rescue nil}
    pipeline_id ${record.dig("PipelineId") rescue record.dig("pipeline_id") rescue nil}
    workitem_id ${record.dig("WorkitemId") rescue record.dig("workitem_id") rescue nil}
    worker_name ${record.dig("WorkerName") rescue record.dig("worker_name") rescue nil}
    instance_name ${record.dig("InstanceName") rescue record.dig("instance_name") rescue nil}
  </record>
</filter>

# Clean up and structure the final log record
<filter docker.**>
  @type record_transformer
  <record>
    message ${record["Message"] || record["message"] || record["log"]}
    level ${record["log_level"]}
    service ${record["service_name"]}
    instance ${record["instance_name"]}
  </record>
  remove_keys attrs,stream
</filter>

# Send to OpenTelemetry Collector
<match docker.**>
  @type forward
  send_timeout 60s
  recover_wait 10s
  hard_timeout 60s
  
  <server>
    name otel-collector
    host otel-collector
    port 8006
    weight 60
  </server>
  
  <buffer>
    @type file
    path /var/log/fluentd-buffers/docker.buffer
    flush_mode interval
    flush_interval 1s
    chunk_limit_size 8MB
    queue_limit_length 512
    retry_forever true
    retry_max_interval 30
    overflow_action block
  </buffer>
</match>