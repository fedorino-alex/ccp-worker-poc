version: '3.8'

services:

  # Redis service
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # RabbitMQ service
  rabbitmq:
    image: rabbitmq:4-management-alpine
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8006:8006"   # Fluentd Forward receiver
      - "8889:8889"   # Prometheus metrics
      - "13133:13133" # Health check
    networks:
      - app-network
    depends_on:
      - zipkin
      - tempo
      - seq
      - loki
    restart: unless-stopped

  # Fluentd for collecting container logs
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./fluentd.conf:/fluentd/etc/fluent.conf:ro
      - fluentd_logs:/var/log
    depends_on:
      otel-collector:
        condition: service_started
    networks:
      - app-network
    restart: unless-stopped

  # CCP Instance 1 - Primary
  ccp-1:
    build:
      context: .
      dockerfile: ccp/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionString__Redis=redis:6379
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - INSTANCE_NAME=ccp-1
      - OpenTelemetry__Otlp__Endpoint=http://otel-collector:4317
    networks:
      - app-network

  # CCP Instance 2 - Secondary
  ccp-2:
    build:
      context: .
      dockerfile: ccp/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionString__Redis=redis:6379
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - INSTANCE_NAME=ccp-2
      - OpenTelemetry__Otlp__Endpoint=http://otel-collector:4317
    networks:
      - app-network

  # CCP Instance 3 - Tertiary
  ccp-3:
    build:
      context: .
      dockerfile: ccp/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionString__Redis=redis:6379
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - INSTANCE_NAME=ccp-3
      - OpenTelemetry__Otlp__Endpoint=http://otel-collector:4317
    networks:
      - app-network

  # nginx Load Balancer (ONLY access point)
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "5000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - ccp-1
      - ccp-2
      - ccp-3
    networks:
      - app-network

  # # Worker service
  validation-1:
    build:
      context: .
      dockerfile: worker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Worker__Name=validation
      - INSTANCE_NAME=worker-validation-1
      - OpenTelemetry__Otlp__Endpoint=http://otel-collector:4317
    networks:
      - app-network

  validation-2:
    build:
      context: .
      dockerfile: worker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Worker__Name=validation
      - INSTANCE_NAME=worker-validation-2
      - OpenTelemetry__Otlp__Endpoint=http://otel-collector:4317
    networks:
      - app-network

  validation-3:
    build:
      context: .
      dockerfile: worker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Worker__Name=validation
      - INSTANCE_NAME=worker-validation-3
      - OpenTelemetry__Otlp__Endpoint=http://otel-collector:4317
    networks:
      - app-network

  processing-4:
    build:
      context: .
      dockerfile: worker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Worker__Name=processing
      - INSTANCE_NAME=worker-processing-1
      - OpenTelemetry__Otlp__Endpoint=http://otel-collector:4317
    networks:
      - app-network

  processing-5:
    build:
      context: .
      dockerfile: worker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Worker__Name=processing
      - INSTANCE_NAME=worker-processing-2
      - OpenTelemetry__Otlp__Endpoint=http://otel-collector:4317
    networks:
      - app-network

  processing-6:
    build:
      context: .
      dockerfile: worker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Worker__Name=processing
      - INSTANCE_NAME=worker-processing-3
      - OpenTelemetry__Otlp__Endpoint=http://otel-collector:4317
    networks:
      - app-network

  notification-7:
    build:
      context: .
      dockerfile: worker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Worker__Name=notification
      - INSTANCE_NAME=worker-notification-1
      - OpenTelemetry__Otlp__Endpoint=http://otel-collector:4317
    networks:
      - app-network

  notification-8:
    build:
      context: .
      dockerfile: worker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Worker__Name=notification
      - INSTANCE_NAME=worker-notification-2
      - OpenTelemetry__Otlp__Endpoint=http://otel-collector:4317
    networks:
      - app-network

  notification-9:
    build:
      context: .
      dockerfile: worker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      otel-collector:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Worker__Name=notification
      - INSTANCE_NAME=worker-notification-3
      - OpenTelemetry__Otlp__Endpoint=http://otel-collector:4317
    networks:
      - app-network

  # Zipkin
  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"   # Zipkin UI
    networks:
      - app-network

  # Seq
  seq:
    image: datalust/seq:latest
    ports:
      - "5341:80"     # Seq UI
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_NOAUTHENTICATION=true
    volumes:
      - seq_data:/data
    networks:
      - app-network

  # Grafana Tempo
  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml:ro
      - tempo_data:/var/tempo
    ports:
      - "3200:3200"   # Tempo API
    networks:
      - app-network
    user: "0:0"  # Run as root to avoid permission issues

  # Grafana Loki for logs
  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"   # Loki API
    volumes:
      - loki_data:/loki
    networks:
      - app-network
    restart: unless-stopped

  # Grafana (for Tempo UI)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"   # Grafana UI
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
    networks:
      - app-network

volumes:
  redis_data:
  rabbitmq_data:
  seq_data:
  tempo_data:
  grafana_data:
  signoz_data:
  skywalking_data:
  loki_data:
  fluentd_logs:

networks:
  app-network:
    driver: bridge
